name: Create release

on:
  push:
    branches:
      - 'pipelines/**'
      - 'feature/provider_targeted_images'
    tags:
      - 'v*'

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: labd/mach-composer/mach
  STABLE_TERRAFORM: "1.1"

jobs:
  goreleaser:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Set up Go
        uses: WillAbides/setup-go-faster@v1.7.0
        with:
          go-version: 1.18
      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v2
        with:
          version: latest
          args: release --rm-dist
        env:
          GITHUB_TOKEN: ${{ secrets.GH_PAT }}
      - uses: actions/upload-artifact@v3
        with:
          name: mach-composer
          path: dist/*


  docker:
    needs: [goreleaser]
    name: Build and push docker image
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 6
      matrix:
        terraform_version: ["1.0.11", "1.1.9", "1.2.0"]
        provider: ["full", "aws", "azure"]
        include:
          - provider: "full"
            terraform_version: "0.14.11"
    steps:
      - name: Check out the repo
        uses: actions/checkout@v2
      - name: Prepare
        id: prep
        run: |
          DOCKER_IMAGE=mach
          VERSION=noop
          TERRAFORM_VERSION=${{ matrix.terraform-version }}
          TERRAFORM=${TERRAFORM_VERSION%.*}

          SUFFIX=""
          if [ "${{ matrix.provider }}" != "full" ]; then
              SUFFIX="-${{ matrix.provider }}"
          fi

          if [ "$TERRAFORM" != "$STABLE_TERRAFORM" ]; then
              SUFFIX="$SUFFIX-tf$TERRAFORM"
          fi

          if [[ $GITHUB_REF == refs/tags/* ]]; then
          VERSION=$(echo ${GITHUB_REF#refs/tags/} | sed -r 's#^v##g')
          elif [[ $GITHUB_REF == refs/heads/* ]]; then
          VERSION=$(echo ${GITHUB_REF#refs/heads/} | sed -r 's#/+#-#g')
          if [ "${{ github.event.repository.default_branch }}" = "$VERSION" ]; then
              VERSION=edge
          fi
          fi
          CACHE_FROM_TAG="${VERSION}"
          TAGS="${VERSION}${SUFFIX}"
          if [[ $VERSION =~ ^(v)?[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}$ ]]; then
          MINOR=${VERSION%.*}
          MAJOR=${MINOR%.*}
          TAGS="$TAGS,${MINOR}${SUFFIX},${MAJOR}${SUFFIX},latest${SUFFIX}"
          CACHE_FROM_TAG="latest${SUFFIX}"
          elif [ "${{ github.event_name }}" = "push" ]; then
          TAGS="$TAGS,sha-${GITHUB_SHA::8}"
          fi
          echo ::set-output name=version::${VERSION}
          echo ::set-output name=tags::${TAGS}
          echo ::set-output name=cache-from-tag::${CACHE_FROM_TAG}
          echo $VERSION
      - name: Login to docker.pkg.github.com
        run: docker login -u ${{ github.actor }} -p ${{ secrets.GITHUB_TOKEN }} docker.pkg.github.com
      - name: Pull cache from docker.pkg.github.com
        run: docker pull docker.pkg.github.com/labd/mach-composer/mach:${{ steps.prep.outputs.cache-from-tag }} || true
      - name: Build and push
        uses: docker/build-push-action@v1
        with:
          push: true
          cache_froms: ghcr.io/labd/mach-composer/mach:${{ steps.prep.outputs.cache-from-tag }}
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
          registry: docker.pkg.github.com
          repository: labd/mach-composer/mach
          build-args: |
            "TERRAFORM_VERSION=${{ matrix.terraform-version }}"
            "PROVIDER=${{ matrix.provider }}"
          tags: ${{ steps.prep.outputs.tags }}
